<Project TreatAsLocalProperty="Dev" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- 
      Declare our supported frameworks so they show up in the target framework selection dropdown.
  -->
  <ItemGroup>
    <SupportedTargetFramework Include="net462" DisplayName="Visual Studio 2017" />
    <SupportedTargetFramework Include="net461" DisplayName="Visual Studio 2015" />
    <SupportedTargetFramework Include="net46" DisplayName="Visual Studio 2013" />
  </ItemGroup>

  <PropertyGroup>
    <!-- We only support building/loading on VS2017+ -->
    <MinimumVisualStudioVersion>15.0</MinimumVisualStudioVersion>

    <!-- 
        This property is important since while restoring, we should *never* modify either TF or TFs
        The combination of properties to check was reverse-engineered from the NuGet targets at 
        https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Build.Tasks/NuGet.targets#L54-L56
    -->
    <IsRestoring Condition="'$(NuGetRestoreTargets)' != '' and '$(ExcludeRestorePackageImports)' == 'true'">true</IsRestoring>

    <MSBuildAllProjects Condition="'$(IsRestoring)' != 'true' and Exists('$(MSBuildProjectFullPath).user')">$(MSBuildAllProjects);$(MSBuildProjectFullPath).user</MSBuildAllProjects>
  </PropertyGroup>

  <!-- The .user target isn't imported in the crosstargeting version of the Common targets 
       It's important to import it because it contains the user-selected ActiveDebugFramework. 
       NOTE: we only import the active framework value if Dev != *, as we consider that value to 
       mean "build for all supported TFs defined in the project".
  -->
  <Import Project="$(MSBuildProjectFullPath).user" Condition="'$(IsRestoring)' != 'true' and '$(Dev)' != '*' and Exists('$(MSBuildProjectFullPath).user')" />

  <!-- The defaults will not consider '*' for ActiveDebugFramework -> TargetFramework -> Dev mapping -->
  <Import Project="..\build\Xamarin.VSSDK.Defaults.targets" Condition="'$(IsRestoring)' != 'true'" />
  
</Project>